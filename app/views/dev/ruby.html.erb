<% content_for :language_name  do %> Ruby <% end %>
<% content_for :bindings_url   do %> http://github.com/fizx/parsley-ruby/tree/master <% end %>
<% content_for :language_brush do %> ruby <% end %>

<% content_for :code do %>
  require "rubygems"
  require "online_parselets"
  require "pp"

  client = OnlineParselets::Client.new(:api_key => "your_api_key")
  parselets = client.find("yelp")
  parselet = parselets.first
  yelp_data = parselet.parse(:url => "http://www.yelp.com")
  pp yelp_data

  # Reload a parselet from the server
  parselet = client.parselet(parselet.server_id)  
<% end %>

<% if @parselet %>
  <% 
    example_data = @parselet.example_data
    example_element, example_value = @parselet.pick_example_element
  %>
  
  <% content_for :online_parselet_code_from_parslet do %>
    #!/usr/bin/env ruby
    require "rubygems"
    require "online_parselets"
    require "pp"

    # Code to run parselet <%= @parselet.id %> (<%= @parselet.name %> by <%= @parselet.user.login %>)

    client = OnlineParselets::Client.new(:api_key => "<%= logged_in? ? current_user.api_key : "your_api_key_from_your_profile" %>")
    parselet = client.parselet(<%= @parselet.id %>)
    data = parselet.parse(:url => "<%= @parselet.example_url %>")

    pp data
    # The result should look much like: <%= parse_parselet_url(@parselet) %>
    <% if example_element.strip.length > 0 %>

    puts data<%= example_element.strip %> # Outputs: <%= truncate example_value.inspect %>
    <% end %>
  <% end %>

  <% content_for :parsley_code_from_parselet do %>
    require "rubygems"
    require "parsley"
    require "open-uri"
    require "pp"
  
    json_string = <<-STR<%= "\n#{@parselet.pretty_code.strip}".gsub(/\n/, "\n      ") %>
    STR
    
    parselet = Parsley.new(json_string)
    content = open("<%= @parselet.example_url %>").read
    data = parselet.parse(:string => content)

    pp data
    # The result should look much like: <%= parse_parselet_url(@parselet) %>
    <% if example_element.strip.length > 0 %>

    puts data<%= example_element.strip %> # Outputs: <%= truncate example_value.inspect %>
    <% end %>
  <% end %>
<% end %>

<% content_for :code_parsley do %>
  require "rubygems"
  require "parsley"
  require "open-uri"
  
  parselet = Parsley.new({ 
                           "title" => "title", 
                           "links(a)" => [
                             { 
                               "name" => ".", 
                               "href" => "@href" 
                             }
                           ]
                         })
  out = parselet.parse(:file => "page.html")
  out = parselet.parse(:file => "page.xhtml", :input => :xml)
  json_string = parselet.parse(:file => "page.html", :output => :json)
  # Using open-uri.
  out = parselet.parse(:string => open("http://www.example.com/").read)
  # Using Parsley's builtin URI fetching.
  out = parselet.parse(:string => "http://www.example.com/")
<% end %>

<% content_for :install do %>
  <p>
    First, run <code>gem sources -a http://gems.github.com</code> if you haven't already, then run:<br />
    <code>sudo gem install iterationlabs-online_parselets</code>
  </p>
  <p>
    You can also <a href="http://github.com/iterationlabs/online_parselets">download the gem and install it from source</a>.
  </p>
  <p>
    For faster, local parsing, please also <a href="http://github.com/fizx/parsley/blob/master/INSTALL">install Parsley itself</a>.
  </p>
<% end %>