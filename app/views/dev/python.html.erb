<% content_for :language_name  do %> Python <% end %>
<% content_for :bindings_url   do %> http://github.com/fizx/pyparsley <% end %>
<% content_for :language_brush do %> python <% end %>

<% content_for :code do %>
  # Code coming soon.  Please see our REST API.
<% end %>

<% content_for :install do %>
  At the moment there is no Python package for the Parselets.com API (write us one!), but you can use the <%= link_to "REST API", :action => 'api' %>.
<% end %>

<% if @parselet %>
  <% 
    example_data = @parselet.example_data
    example_element, example_value = @parselet.pick_example_element
  %>
  
  <% content_for :online_parselet_code_from_parselet do %>
    # Code to run parselet <%= @parselet.id %> (<%= @parselet.name %> by <%= @parselet.user.login %>)
    #
    # Coming soon...
  <% end %>

  <% content_for :parsley_code_from_parselet do %>
    # Code to run parselet <%= @parselet.id %> (<%= @parselet.name %> by <%= @parselet.user.login %>)
    #
    # Coming soon...
  <% end %>
<% end %>

<% content_for :code_parsley do %>
  from pyparsley import PyParsley
  
  parselet = PyParsley({ 
                         "title": "title", 
                         "links(a)": [
                           { 
                             "name": ".", 
                             "href": "@href" 
                           }
                         ]
                       })
  # Using Parsley's builtin URI fetching.
  json_string = parselet.parse(file = "http://www.example.com/", output = "json")
  print(json_string)
  
  # Or run it on a file:
  # json_string = parselet.parse(file = some_file, output = "json")
<% end %>
